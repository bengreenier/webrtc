diff --git a/modules/rtp_rtcp/source/source_tracker_unittest.cc b/modules/rtp_rtcp/source/source_tracker_unittest.cc
index c11142bcb4..efd6ebec7a 100644
--- a/modules/rtp_rtcp/source/source_tracker_unittest.cc
+++ b/modules/rtp_rtcp/source/source_tracker_unittest.cc
@@ -286,14 +286,14 @@ TEST(SourceTrackerTest, OnFrameDeliveredRecordsSourcesDistinctSsrcs) {
            .set_local_capture_clock_offset(kLocalCaptureClockOffset)}));
 
   Timestamp timestamp = time_controller.GetClock()->CurrentTime();
-  constexpr RtpSource::Extensions extensions0 = {
-      .audio_level = kAudioLevel0,
-      .absolute_capture_time = kAbsoluteCaptureTime,
-      .local_capture_clock_offset = kLocalCaptureClockOffset};
-  constexpr RtpSource::Extensions extensions1 = {
-      .audio_level = kAudioLevel1,
-      .absolute_capture_time = kAbsoluteCaptureTime,
-      .local_capture_clock_offset = kLocalCaptureClockOffset};
+  RtpSource::Extensions extensions0;
+  extensions0.audio_level = kAudioLevel0;
+  extensions0.absolute_capture_time = kAbsoluteCaptureTime;
+  extensions0.local_capture_clock_offset = kLocalCaptureClockOffset;
+  RtpSource::Extensions extensions1;
+  extensions1.audio_level = kAudioLevel1;
+  extensions1.absolute_capture_time = kAbsoluteCaptureTime;
+  extensions1.local_capture_clock_offset = kLocalCaptureClockOffset;
 
   time_controller.AdvanceTime(TimeDelta::Zero());
 
@@ -350,18 +350,18 @@ TEST(SourceTrackerTest, OnFrameDeliveredRecordsSourcesSameSsrc) {
 
   time_controller.AdvanceTime(TimeDelta::Zero());
   Timestamp timestamp = time_controller.GetClock()->CurrentTime();
-  constexpr RtpSource::Extensions extensions0 = {
-      .audio_level = kAudioLevel0,
-      .absolute_capture_time = kAbsoluteCaptureTime,
-      .local_capture_clock_offset = kLocalCaptureClockOffset};
-  constexpr RtpSource::Extensions extensions1 = {
-      .audio_level = kAudioLevel1,
-      .absolute_capture_time = kAbsoluteCaptureTime,
-      .local_capture_clock_offset = kLocalCaptureClockOffset};
-  constexpr RtpSource::Extensions extensions2 = {
-      .audio_level = kAudioLevel2,
-      .absolute_capture_time = kAbsoluteCaptureTime,
-      .local_capture_clock_offset = kLocalCaptureClockOffset};
+  RtpSource::Extensions extensions0;
+  extensions0.audio_level = kAudioLevel0;
+  extensions0.absolute_capture_time = kAbsoluteCaptureTime;
+  extensions0.local_capture_clock_offset = kLocalCaptureClockOffset;
+  RtpSource::Extensions extensions1;
+  extensions1.audio_level = kAudioLevel1;
+  extensions1.absolute_capture_time = kAbsoluteCaptureTime;
+  extensions1.local_capture_clock_offset = kLocalCaptureClockOffset;
+  RtpSource::Extensions extensions2;
+  extensions2.audio_level = kAudioLevel2;
+  extensions2.absolute_capture_time = kAbsoluteCaptureTime;
+  extensions2.local_capture_clock_offset = kLocalCaptureClockOffset;
 
   EXPECT_THAT(
       tracker.GetSources(),
@@ -403,18 +403,18 @@ TEST(SourceTrackerTest, OnFrameDeliveredUpdatesSources) {
   constexpr Timestamp kReceiveTime1 = Timestamp::Millis(61);
   constexpr Timestamp kReceiveTime2 = Timestamp::Millis(62);
 
-  constexpr RtpSource::Extensions extensions0 = {
-      .audio_level = kAudioLevel0,
-      .absolute_capture_time = kAbsoluteCaptureTime0,
-      .local_capture_clock_offset = kLocalCaptureClockOffset0};
-  constexpr RtpSource::Extensions extensions1 = {
-      .audio_level = kAudioLevel1,
-      .absolute_capture_time = kAbsoluteCaptureTime1,
-      .local_capture_clock_offset = kLocalCaptureClockOffset1};
-  constexpr RtpSource::Extensions extensions2 = {
-      .audio_level = kAudioLevel2,
-      .absolute_capture_time = kAbsoluteCaptureTime2,
-      .local_capture_clock_offset = kLocalCaptureClockOffset2};
+  RtpSource::Extensions extensions0;
+  extensions0.audio_level = kAudioLevel0;
+  extensions0.absolute_capture_time = kAbsoluteCaptureTime0;
+  extensions0.local_capture_clock_offset = kLocalCaptureClockOffset0;
+  RtpSource::Extensions extensions1;
+  extensions1.audio_level = kAudioLevel1;
+  extensions1.absolute_capture_time = kAbsoluteCaptureTime1;
+  extensions1.local_capture_clock_offset = kLocalCaptureClockOffset1;
+  RtpSource::Extensions extensions2;
+  extensions2.audio_level = kAudioLevel2;
+  extensions2.absolute_capture_time = kAbsoluteCaptureTime2;
+  extensions2.local_capture_clock_offset = kLocalCaptureClockOffset2;
 
   GlobalSimulatedTimeController time_controller(Timestamp::Seconds(1000));
   SourceTracker tracker(time_controller.GetClock());
@@ -526,10 +526,10 @@ TEST(SourceTrackerTest, TimedOutSourcesAreRemoved) {
 
   time_controller.AdvanceTime(SourceTracker::kTimeout);
 
-  constexpr RtpSource::Extensions extensions1 = {
-      .audio_level = kAudioLevel1,
-      .absolute_capture_time = kAbsoluteCaptureTime1,
-      .local_capture_clock_offset = kLocalCaptureClockOffset1};
+  RtpSource::Extensions extensions1;
+  extensions1.audio_level = kAudioLevel1;
+  extensions1.absolute_capture_time = kAbsoluteCaptureTime1;
+  extensions1.local_capture_clock_offset = kLocalCaptureClockOffset1;
 
   EXPECT_THAT(
       tracker.GetSources(),
